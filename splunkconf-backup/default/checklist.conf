[splunkconf_backup_errors_local]
title = Splunkconf local backups status
category = Splunk Miscellaneous
tags = configuration,backups
failure_text = Splunkconf Backup experienced issues while doing local backup or backups were not launched
suggested_action = Please inspect logs to verify backups are running as expected and/or use Splunkconf Dashboard
doc_link = 
doc_title = 
applicable_to_groups = dmc_group_search_head
disabled = 0
drilldown = /app/splunkconf-backup/splunkconfbackupstatut?form.field1.earliest=-24h%40h&form.field1.latest=now&form.fieldhost=$instance$
search = |tstats count where index=_internal AND source="*splunkconf-backup.log*" earliest=-12h latest=now() by host | inputlookup append=t splunkconf-backup-expected | dedup host | table host  | eval object=mvappend("etc","scripts","kvdump","state"), type="local" |  mvexpand object | join type=left host,type,object [search earliest=-12h latest=now() index=_internal source="*splunkconf-backup.log*" "splunkconf-backup"  NOT "splunkconf-purgebackup" action=backup NOT result="running" NOT object="kvstore"|  stats  latest(result) as result by type,host,object| fillnull result value="missing" | eval label=host."_".object."_".type | eval label=type |eval group=host."_".object |rename result AS latest_result] | stats dc(nb) values(latest_result) as latest_result values(group) as group  by host,label,object| where latest_result IN ("success","disabled")  | stats count values(group) as metric by host | eval severity_level=if(count <4 , 3, 0) |rename host as instance
description = This looks for status in the SplunkConf Backup logs for last 12 hours (local backups only).
[splunkconf_backup_errors_remote]
title = Splunkconf remote backups status
category = Splunk Miscellaneous
tags = configuration,backups
failure_text = Splunkconf Backup experienced issues while copying backup remote , was not launched or local backups could not be generated
suggested_action = Please inspect logs to verify backups are running as expected and/or use Splunkconf Dashboard
doc_link = 
doc_title = 
applicable_to_groups = dmc_group_search_head
disabled = 0
drilldown = /app/splunkconf-backup/splunkconfbackupstatut?form.field1.earliest=-24h%40h&form.field1.latest=now&form.fieldhost=$instance$
search = |tstats count where index=_internal AND source="*splunkconf-backup.log*" earliest=-12h latest=now() by host | inputlookup append=t splunkconf-backup-expected | dedup host | table host  | eval object=mvappend("etc","scripts","kvdump","state"), type="remote" |  mvexpand object | join type=left host,type,object [search earliest=-12h latest=now() index=_internal source="*splunkconf-backup.log*" "splunkconf-backup"  NOT "splunkconf-purgebackup" action=backup NOT result="running" NOT object="kvstore"|  stats  latest(result) as result by type,host,object| fillnull result value="missing" | eval label=host."_".object."_".type | eval label=type |eval group=host."_".object |rename result AS latest_result] | stats dc(nb) values(latest_result) as latest_result values(group) as group  by host,label,object| where latest_result IN ("success","disabled")  | stats count values(group) as metric by host | eval severity_level=if(count <4 , 3, 0) |rename host as instance
description = This looks for status in the SplunkConf Backup logs for last 12 hours (remote backups only).
[splunkconf_starving_hosts]
title = Splunkconf starving hosts
category = Splunk Miscellaneous
tags = configuration,backups
failure_text = Splunkconf Backup didnt run successfully because of lack of local disk space to store backups 
suggested_action = Please inspect logs to verify backups are running as expected and/or use Splunkconf Dashboard
doc_link = 
doc_title = 
applicable_to_groups = dmc_group_search_head
disabled = 0
drilldown = /app/splunkconf-backup/splunkconf_purge?form.field1.earliest=-24h%40h&form.field1.latest=now&form.fieldhost=$instance$
search = index=_internal earliest=-24h latest=now() source="*splunkconf-backup.log*"  TERM(splunkconf-purgebackup) result=* [|tstats count where index=_internal AND source="*splunkconf-backup.log*" earliest=-24h latest=now() by host | inputlookup append=t splunkconf-backup-expected | dedup host | fields host ] | stats sum(eval(if(result=="starving-nopurgebackupcandidate","1","0"))) as starving count(result) as total by host | eval severity_level=if(starving>0 , 3, 0) |rename host as instance|
description = This looks for past disk starving conditions that prevented log purge for last 24 hours according to splunkconf purge log
